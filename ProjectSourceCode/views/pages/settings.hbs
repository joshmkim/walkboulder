<!DOCTYPE html>
<html lang="en">
{{> message message=message error=error }}
<head>
  <meta charset="UTF-8">
  <title>Settings</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #f8f9fa;
      font-family: sans-serif;
    }

    .settings-card {
      background-color: #fff;
      max-width: 500px;
      margin: 3rem auto;
      padding: 2rem;
      border: 1px solid #ccc;
      border-radius: 10px;
    }

    .avatar {
      width: 100px;
      height: 100px;
      object-fit: cover;
      margin: 0 auto;
      border-radius: 50%;
      display: block;
    }

    .edit-avatar-wrapper {
      text-align: center;
      margin-top: 0.75rem;
    }

    .custom-btn {
      display: inline-block;
      padding: 0.4rem 1rem;
      font-size: 0.95rem;
      background-color: #000;
      color: white;
      border: 1px solid #000;
      border-radius: 5px;
      text-decoration: none;
      margin-top: 0.3rem;
      cursor: pointer;
      transition: background-color 0.2s ease;
    }

    .custom-btn:hover {
      background-color: #333;
    }

    .user-name {
      font-size: 1.2rem;
      font-weight: 600;
      margin-bottom: 0;
    }

    .user-plan {
      font-size: 0.9rem;
      color: #888;
      margin-bottom: 1.5rem;
    }

    label {
      font-weight: 500;
      margin-top: 1rem;
    }

    input[type="text"],
    input[type="email"],
    input[type="password"] {
      width: 100%;
      padding: 0.5rem;
      border-radius: 6px;
      border: 1px solid #ccc;
    }

    .form-control:focus {
      box-shadow: none;
      border-color: #888;
    }

    .form-group {
      position: relative;
    }

    .save-btn {
    background-color: #e2d4f7; 
    color: #fff;
    border: none;
    margin-top: 1.5rem;
    padding: 0.5rem 1.5rem;
    border-radius: 5px;
    font-weight: 500;
    cursor: not-allowed;
    transition: background-color 0.2s ease;
    }

    .save-btn.enabled {
    background-color: #a97ff2;
    cursor: pointer;
    }
</style>

</head>
<body>

  <div class="container">
    <div class="settings-card text-start">
      <!-- Profile Info -->
      <div class="text-center">
        <img src="{{userData.avatar}}" alt="Profile picture" class="avatar" id="avatarPreview">

        <!-- Edit Avatar Form (Styled) -->
        <div class="edit-avatar-wrapper">
          <form action="/upload-avatar" method="POST" enctype="multipart/form-data" id="avatarForm">
            <input type="file" name="avatar" accept="image/*" style="display: none;" id="avatarInput">
            <button type="button" class="custom-btn" onclick="document.getElementById('avatarInput').click();">Edit Avatar</button>
          </form>
        </div>

        <p class="user-name">{{userData.username}}</p>
      </div>

      <!-- Settings Form -->
        <form method="POST" action="/settings">
        <div class="mb-3">
            <label for="username"> Username </label>
            <input type="text" class="form-control" name="username" id="username" value="{{userData.username}}">
        </div>
        <div class="mb-3">
            <label for="firstName">First Name</label>
            <input type="text" class="form-control" name="firstname" id="firstName" value="{{userData.firstname}}">
        </div>
        <div class="mb-3">
            <label for="lastName">Last Name</label>
            <input type="text" class="form-control" name="lastname" id="lastName" value="{{userData.lastname}}">
        </div>
        <div class="mb-3">
            <label for="email">Email</label>
            <input type="email" class="form-control" name="email" id="email" value="{{userData.email}}">
        </div>
        <div class="mb-3 form-group">
        <label for="currentPassword">Current Password</label>
        <input type="password" class="form-control" id="currentPassword" name="currentPassword">
        </div>

        <div class="mb-3 form-group">
        <label for="newPassword">New Password</label>
        <input type="password" class="form-control" id="newPassword" name="newPassword">
        </div>

        <div class="mb-3 form-group">
        <label for="confirmPassword">Confirm New Password</label>
        <input type="password" class="form-control" id="confirmPassword" name="confirmPassword">
        </div>
        <button type="submit" class="save-btn">Save</button>
        </form>

    </div>
  </div>

  <!-- Script for Avatar Upload & Preview -->
  <script>
    const avatarInput = document.getElementById('avatarInput');
    const avatarForm = document.getElementById('avatarForm');
    const avatarPreview = document.getElementById('avatarPreview');

    avatarInput.addEventListener('change', function() {
      if (avatarInput.files && avatarInput.files[0]) {
        const reader = new FileReader();
        reader.onload = function(e) {
          avatarPreview.src = e.target.result;
        };
        reader.readAsDataURL(avatarInput.files[0]);

        // Optional small delay for preview effect
          avatarForm.submit();
      }
    });
  </script>

    <script>
    const form = document.querySelector('form[action="/settings"]');
    const inputs = form.querySelectorAll('input');
    const saveBtn = form.querySelector('.save-btn');

    // Store original values
    const originalValues = {};
    inputs.forEach(input => {
        originalValues[input.name] = input.value;
    });

    function checkForChanges() {
        let changed = false;
        inputs.forEach(input => {
        if (input.value !== originalValues[input.name]) {
            changed = true;
        }
        });

        if (changed) {
        saveBtn.classList.add('enabled');
        saveBtn.disabled = false;
        } else {
        saveBtn.classList.remove('enabled');
        saveBtn.disabled = true;
        }
    }

    inputs.forEach(input => {
        input.addEventListener('input', checkForChanges);
    });

    // Disable button on page load
    window.addEventListener('DOMContentLoaded', () => {
        saveBtn.disabled = true;
    });
    </script>

</body>
</html>
